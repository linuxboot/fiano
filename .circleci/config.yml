# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
workflows:
  version: 2
  build_and_test:
    jobs:
      - clean-code
      - test:
          requires:
            - clean-code
      - race:
          requires:
            - clean-code
      - check_licenses:
          requires:
            - clean-code
jobs:
  clean-code:
    docker:
      - image: circleci/golang:1.10.3
    working_directory: /go/src/github.com/linuxboot/fiano
    steps:
      - checkout
      - run:
          name: Install dep
          command: |
            wget https://github.com/golang/dep/releases/download/v0.4.1/dep-linux-amd64
            chmod +x ./dep-linux-amd64
      - run:
          name: Install ineffassign
          command: go get github.com/gordonklaus/ineffassign
      - run:
          name: Check vendored dependencies
          command: |
            ./dep-linux-amd64 hash-inputs
            ./dep-linux-amd64 status
            ./dep-linux-amd64 ensure -vendor-only
            git status vendor
            if [[ -n "$(git status --porcelain vendor)" ]]; then
              echo 'vendor/ is out-of-date: run `dep ensure -vendor-only` and then check in the changes'
              git status --porcelain vendor
              exit 1
            fi
      - run:
          name: vet
          command: |
            go tool vet ./...
      - run:
          name: gofmt
          command: test -z $(gofmt -s -l fmap integration pkg scripts uefi unicode utk utk2 uuid visitors)
      - run:
          name: ineffassign
          command: ineffassign .
  test:
    docker:
      - image: circleci/golang:1.10.3
    working_directory: /go/src/github.com/linuxboot/fiano
    environment:
      - CGO_ENABLED: 0
    steps:
      - checkout
      - run:
          name: Test all
          command: go test -a -ldflags '-s' ./...
      - run:
          name: Test coverage
          command: go test -cover ./...
  race:
    docker:
      - image: circleci/golang:1.10.3
    working_directory: /go/src/github.com/linuxboot/fiano
    environment:
      - CGO_ENABLED: 1
    steps:
      - checkout
      - run:
          name: Race detector
          command: go test -race ./...
  check_licenses:
    docker:
      - image: circleci/golang:1.10.3
    working_directory: /go/src/github.com/linuxboot/fiano
    environment:
      - CGO_ENABLED: 0
    steps:
      - checkout
      - run:
          name: Check licenses
          command: go run scripts/checklicenses/checklicenses.go
